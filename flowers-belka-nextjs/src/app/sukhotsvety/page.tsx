'use client';

import React, { useState, useMemo } from 'react';
import Link from 'next/link';
import ProductCard from '@/components/ProductCard';
import Breadcrumbs from '@/components/Breadcrumbs';
import SEOHead from '@/components/SEOHead';
import { completeProducts } from '@/data/products-complete';
import { getCategorySEO, generateBreadcrumbs } from '@/utils/seo';

export default function SukhotsvetyPage() {
  // SEO –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const seoData = getCategorySEO('sukhotsvety');
  const breadcrumbs = generateBreadcrumbs('/sukhotsvety');

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [filters, setFilters] = useState({
    priceFrom: '',
    priceTo: '',
    type: '',
    sortBy: 'popular'
  });

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã —Å—É—Ö–æ—Ü–≤–µ—Ç–æ–≤
  const categoryProducts = useMemo(() => {
    let filtered = completeProducts.filter(p => p.category === 'sukhotsvety');

    // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
    if (filters.priceFrom) {
      filtered = filtered.filter(p => p.price >= parseInt(filters.priceFrom));
    }
    if (filters.priceTo) {
      filtered = filtered.filter(p => p.price <= parseInt(filters.priceTo));
    }

    // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É
    if (filters.type) {
      filtered = filtered.filter(p => 
        p.tags.some(tag => tag.toLowerCase().includes(filters.type.toLowerCase()))
      );
    }

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    switch (filters.sortBy) {
      case 'price_asc':
        filtered.sort((a, b) => a.price - b.price);
        break;
      case 'price_desc':
        filtered.sort((a, b) => b.price - a.price);
        break;
      case 'name':
        filtered.sort((a, b) => a.name.localeCompare(b.name));
        break;
      default:
        // –ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ (—Ö–∏—Ç—ã —Å–Ω–∞—á–∞–ª–∞, –ø–æ—Ç–æ–º –ø–æ –¥–∞—Ç–µ)
        filtered.sort((a, b) => {
          if (a.isHit && !b.isHit) return -1;
          if (!a.isHit && b.isHit) return 1;
          return new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime();
        });
    }

    return filtered;
  }, [filters]);

  const handleFilterChange = (key: string, value: string) => {
    setFilters(prev => ({ ...prev, [key]: value }));
  };

  return (
    <>
      <SEOHead {...seoData} />
      <div className="min-h-screen bg-gray-50">
        <div className="container mx-auto px-4 py-8">
          <Breadcrumbs items={breadcrumbs} />

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-4">
              –°—É—Ö–æ—Ü–≤–µ—Ç—ã
            </h1>
            <p className="text-lg text-gray-600 max-w-3xl">
              –î–æ–ª–≥–æ–≤–µ—á–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∏–∑ —Å—É—Ö–æ—Ü–≤–µ—Ç–æ–≤. –ü—Ä–∏—Ä–æ–¥–Ω–∞—è –∫—Ä–∞—Å–æ—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞–¥–æ–ª–≥–æ.
              –ò–¥–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤.
            </p>
          </div>

          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <div className="bg-white rounded-lg shadow-sm p-6 mb-8">
            <h3 className="text-lg font-semibold mb-4">–§–∏–ª—å—Ç—Ä—ã</h3>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              {/* –¶–µ–Ω–∞ –æ—Ç */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –¶–µ–Ω–∞ –æ—Ç (‚ÇΩ)
                </label>
                <input
                  type="number"
                  value={filters.priceFrom}
                  onChange={(e) => handleFilterChange('priceFrom', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                  placeholder="–û—Ç"
                />
              </div>

              {/* –¶–µ–Ω–∞ –¥–æ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –¶–µ–Ω–∞ –¥–æ (‚ÇΩ)
                </label>
                <input
                  type="number"
                  value={filters.priceTo}
                  onChange={(e) => handleFilterChange('priceTo', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                  placeholder="–î–æ"
                />
              </div>

              {/* –¢–∏–ø —Å—É—Ö–æ—Ü–≤–µ—Ç–æ–≤ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –¢–∏–ø —Å—É—Ö–æ—Ü–≤–µ—Ç–æ–≤
                </label>
                <select
                  value={filters.type}
                  onChange={(e) => handleFilterChange('type', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                >
                  <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
                  <option value="–≥–∏–ø—Å–æ—Ñ–∏–ª–∞">–ì–∏–ø—Å–æ—Ñ–∏–ª–∞</option>
                  <option value="–ª–∞–≤–∞–Ω–¥–∞">–õ–∞–≤–∞–Ω–¥–∞</option>
                  <option value="–∫–æ–ª–æ—Å–∫–∏">–ö–æ–ª–æ—Å–∫–∏</option>
                  <option value="–∫–æ–º–ø–æ–∑–∏—Ü–∏—è">–ö–æ–º–ø–æ–∑–∏—Ü–∏—è</option>
                </select>
              </div>

              {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
                </label>
                <select
                  value={filters.sortBy}
                  onChange={(e) => handleFilterChange('sortBy', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                >
                  <option value="popular">–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏</option>
                  <option value="price_asc">–¶–µ–Ω–∞: –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é</option>
                  <option value="price_desc">–¶–µ–Ω–∞: –ø–æ —É–±—ã–≤–∞–Ω–∏—é</option>
                  <option value="name">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
                </select>
              </div>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
          <div className="mb-6">
            <p className="text-gray-600">
              –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <span className="font-semibold">{categoryProducts.length}</span>
            </p>
          </div>

          {/* –°–µ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
          {categoryProducts.length > 0 ? (
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
              {categoryProducts.map((product) => (
                <ProductCard key={product.id} product={product} />
              ))}
            </div>
          ) : (
            <div className="text-center py-12">
              <div className="text-gray-400 text-6xl mb-4">üåæ</div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
              </h3>
              <p className="text-gray-600 mb-4">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
              </p>
              <button
                onClick={() => setFilters({ priceFrom: '', priceTo: '', type: '', sortBy: 'popular' })}
                className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors"
              >
                –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
              </button>
            </div>
          )}

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—É—Ö–æ—Ü–≤–µ—Ç–∞—Ö */}
          <div className="mt-12 bg-white rounded-lg shadow-sm p-8">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">
              –û —Å—É—Ö–æ—Ü–≤–µ—Ç–∞—Ö
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div>
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å—É—Ö–æ—Ü–≤–µ—Ç–æ–≤
                </h3>
                <ul className="space-y-2 text-gray-600">
                  <li>‚Ä¢ –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å - —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∫—Ä–∞—Å–æ—Ç—É –≥–æ–¥–∞–º–∏</li>
                  <li>‚Ä¢ –ù–µ —Ç—Ä–µ–±—É—é—Ç —É—Ö–æ–¥–∞ –∏ –ø–æ–ª–∏–≤–∞</li>
                  <li>‚Ä¢ –ì–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω—ã</li>
                  <li>‚Ä¢ –≠–∫–æ–ª–æ–≥–∏—á–Ω—ã –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã</li>
                  <li>‚Ä¢ –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –ª—é–±–æ–≥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞</li>
                </ul>
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  –£—Ö–æ–¥ –∑–∞ —Å—É—Ö–æ—Ü–≤–µ—Ç–∞–º–∏
                </h3>
                <ul className="space-y-2 text-gray-600">
                  <li>‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä—è–º—ã—Ö —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –ª—É—á–µ–π</li>
                  <li>‚Ä¢ –ó–∞—â–∏—â–∞–π—Ç–µ –æ—Ç –≤–ª–∞–≥–∏</li>
                  <li>‚Ä¢ –ê–∫–∫—É—Ä–∞—Ç–Ω–æ —É–¥–∞–ª—è–π—Ç–µ –ø—ã–ª—å</li>
                  <li>‚Ä¢ –•—Ä–∞–Ω–∏—Ç–µ –≤ —Å—É—Ö–æ–º –º–µ—Å—Ç–µ</li>
                  <li>‚Ä¢ –ù–µ —Å—Ç–∞–≤—å—Ç–µ —Ä—è–¥–æ–º —Å –æ—Ç–æ–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–∏–±–æ—Ä–∞–º–∏</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
