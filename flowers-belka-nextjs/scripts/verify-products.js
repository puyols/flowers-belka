const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
function loadOurProducts() {
  const filePath = path.join(__dirname, '../src/data/products-parsed.ts');
  const content = fs.readFileSync(filePath, 'utf8');

  // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–∞—Ö
  const products = [];
  const lines = content.split('\n');
  let currentProduct = null;
  let inProduct = false;

  for (const line of lines) {
    if (line.includes('id:') && line.includes("'")) {
      inProduct = true;
      currentProduct = {};
    }

    if (inProduct) {
      if (line.includes('name:')) {
        const nameMatch = line.match(/name:\s*'([^']+)'/);
        if (nameMatch) currentProduct.name = nameMatch[1];
      }

      if (line.includes('slug:')) {
        const slugMatch = line.match(/slug:\s*'([^']+)'/);
        if (slugMatch) currentProduct.slug = slugMatch[1];
      }

      if (line.includes('price:')) {
        const priceMatch = line.match(/price:\s*(\d+)/);
        if (priceMatch) currentProduct.price = parseInt(priceMatch[1]);
      }

      if (line.includes('category:')) {
        const categoryMatch = line.match(/category:\s*'([^']+)'/);
        if (categoryMatch) currentProduct.category = categoryMatch[1];
      }
    }

    if (line.includes('},') && inProduct) {
      if (currentProduct.name && currentProduct.category) {
        products.push(currentProduct);
      }
      inProduct = false;
      currentProduct = null;
    }
  }

  return products;
}

// –î–∞–Ω–Ω—ã–µ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ (—Å–æ–±—Ä–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é)
const originalSiteProducts = {
  bukety_tsvetov: [
    // –°—Ç—Ä–∞–Ω–∏—Ü–∞ 1
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 001', price: 4400, slug: 'vesna001' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 002', price: 4600, slug: 'vesna002' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 003', price: 7500, slug: 'vesna003' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 004', price: 4400, slug: 'vesna004' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 005', price: 9000, slug: 'vesna005' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 008', price: 3400, slug: 'vesna008' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 009', price: 5400, slug: 'vesna009' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 010', price: 8000, slug: 'vesna010' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 011', price: 4500, slug: 'vesna011' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 012', price: 3400, slug: 'vesna012' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 016', price: 6600, slug: 'vesna016' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 017', price: 6600, slug: 'vesna017' },
    { name: '–ë—É–∫–µ—Ç –≤–µ—Å–Ω–∞ 018', price: 4500, slug: 'vesna018' },
    { name: '–ë—É–∫–µ—Ç –≥–≤–æ–∑–¥–∏–∫ 017', price: 5800, slug: 'buket017' },
    { name: '–ë—É–∫–µ—Ç –≥–æ—Ä—Ç–µ–Ω–∑–∏–π –í–µ—Ä–µ–Ω–∞', price: 5300, slug: 'buket_verena' },
    { name: '–ë—É–∫–µ—Ç –∏–∑ –≥–∏–ø—Å–æ—Ñ–∏–ª—ã', price: 2500, slug: 'buket_sukhotsvet_004' },
    { name: '–ë—É–∫–µ—Ç –∏–∑ –∫—É—Å—Ç–æ–≤–æ–π —Ä–æ–∑—ã', price: 6000, slug: 'kustoviye_rozy' },
    { name: '–ë—É–∫–µ—Ç –ø–∏–æ–Ω–æ–≤ 011', price: 4100, slug: 'buket011' },
    { name: '–ë—É–∫–µ—Ç –ø–∏–æ–Ω–æ–≤ 012', price: 4100, slug: 'buket012' },
    { name: '–ë—É–∫–µ—Ç –ø–∏–æ–Ω–æ–≤ 048', price: 5400, slug: 'buket048' },
    { name: '–ë—É–∫–µ—Ç –ø–∏–æ–Ω–æ–≤ 049', price: 5400, slug: 'buket049' },
    { name: '–ë—É–∫–µ—Ç —Ä–æ–∑ 021', price: 9900, slug: 'buket021' },
    { name: '–ë—É–∫–µ—Ç —Ä–æ–∑ 023', price: 6500, slug: 'buket023' },
    { name: '–ë—É–∫–µ—Ç —Ä–æ–∑ 033', price: 3500, slug: 'buket033' },
    
    // –°—Ç—Ä–∞–Ω–∏—Ü–∞ 2
    { name: '–ë—É–∫–µ—Ç —Ä–æ–∑ 034', price: 4500, slug: 'buket034' },
    { name: '–ë—É–∫–µ—Ç —Ä–æ–∑ 035', price: 4500, slug: 'buket035' },
    { name: '–ë—É–∫–µ—Ç —Å —Å–∏—Ä–µ–Ω—å—é', price: 8200, slug: 'buket_s_sirenyu' },
    { name: '–ë—É–∫–µ—Ç —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º 054', price: 3300, slug: 'buket054' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 001', price: 4900, slug: 'buket001' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 002', price: 3700, slug: 'buket002' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 003', price: 4500, slug: 'buket003' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 004', price: 3300, slug: 'buket004' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 005', price: 3800, slug: 'buket005' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 006', price: 3500, slug: 'buket006' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 007', price: 3500, slug: 'buket007' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 008', price: 3900, slug: 'buket008' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 009', price: 3300, slug: 'buket009' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 010', price: 4600, slug: 'buket010' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 014', price: 3900, slug: 'buket014' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 015', price: 4300, slug: 'buket015' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 016', price: 4200, slug: 'buket016' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 018', price: 3800, slug: 'buket018' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 019', price: 4200, slug: 'buket019' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 020', price: 6500, slug: 'buket020' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 022', price: 6500, slug: 'buket022' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 024', price: 3500, slug: 'buket024' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 025', price: 4000, slug: 'buket025' },
    { name: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ 026', price: 7100, slug: 'buket026' }
  ]
};

function verifyProducts() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º —Å–∞–π—Ç–æ–º...\n');

  const allProducts = loadOurProducts();
  const ourBukety = allProducts.filter(p => p.category === 'bukety_tsvetov');
  const originalBukety = originalSiteProducts.bukety_tsvetov;
  
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`   –ù–∞—à–∏—Ö –±—É–∫–µ—Ç–æ–≤: ${ourBukety.length}`);
  console.log(`   –ù–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ: ${originalBukety.length}`);
  console.log('');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞
  let foundCount = 0;
  let priceMatchCount = 0;
  let missingProducts = [];
  let priceMismatches = [];
  
  originalBukety.forEach(originalProduct => {
    const ourProduct = ourBukety.find(p => 
      p.name === originalProduct.name || 
      p.slug === originalProduct.slug
    );
    
    if (ourProduct) {
      foundCount++;
      if (ourProduct.price === originalProduct.price) {
        priceMatchCount++;
        console.log(`‚úÖ ${originalProduct.name} - —Ü–µ–Ω–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç (${originalProduct.price})`);
      } else {
        priceMismatches.push({
          name: originalProduct.name,
          ourPrice: ourProduct.price,
          originalPrice: originalProduct.price
        });
        console.log(`‚ö†Ô∏è  ${originalProduct.name} - —Ü–µ–Ω–∞ –ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –Ω–∞—à–∞ ${ourProduct.price}, –æ—Ä–∏–≥–∏–Ω–∞–ª ${originalProduct.price}`);
      }
    } else {
      missingProducts.push(originalProduct);
      console.log(`‚ùå ${originalProduct.name} - –ù–ï –ù–ê–ô–î–ï–ù –≤ –Ω–∞—à–µ–π –±–∞–∑–µ`);
    }
  });
  
  console.log('\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
  console.log(`   –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${foundCount}/${originalBukety.length}`);
  console.log(`   –¶–µ–Ω—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç: ${priceMatchCount}/${foundCount}`);
  console.log(`   –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤: ${missingProducts.length}`);
  console.log(`   –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π —Ü–µ–Ω: ${priceMismatches.length}`);
  
  if (missingProducts.length > 0) {
    console.log('\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã:');
    missingProducts.forEach(product => {
      console.log(`   - ${product.name} (${product.slug})`);
    });
  }
  
  if (priceMismatches.length > 0) {
    console.log('\n‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ü–µ–Ω:');
    priceMismatches.forEach(product => {
      console.log(`   - ${product.name}: –Ω–∞—à–∞ ${product.ourPrice} ‚â† –æ—Ä–∏–≥–∏–Ω–∞–ª ${product.originalPrice}`);
    });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –ª–∏—à–Ω–∏–µ —Ç–æ–≤–∞—Ä—ã
  const extraProducts = ourBukety.filter(ourProduct => {
    return !originalBukety.find(original => 
      original.name === ourProduct.name || 
      original.slug === ourProduct.slug
    );
  });
  
  if (extraProducts.length > 0) {
    console.log(`\nüîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –Ω–∞—à–µ–π –±–∞–∑–µ (${extraProducts.length}):`);
    extraProducts.forEach(product => {
      console.log(`   + ${product.name} (${product.slug}) - ${product.price}‚ÇΩ`);
    });
  }
  
  console.log('\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
verifyProducts();
