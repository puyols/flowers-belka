<?php class ControllerExtensionModuleFX extends Controller { private $error = array(); public function uninstall() { if ((float)VERSION < 2.3) return; if ((float)VERSION < 3) { $this->load->model('extension/event'); $this->model_extension_event->deleteEvent('fx'); return; } $this->load->model('setting/event'); $this->model_setting_event->deleteEventByCode('fx'); } public function install() { if ((float)VERSION < 2.3) return; if ((float)VERSION < 3) { $this->load->model('extension/event'); $this->model_extension_event->addEvent('fx', 'catalog/controller/common/header/before', 'extension/module/fx/event'); return; } $this->load->model('setting/event'); $this->model_setting_event->addEvent('fx', 'catalog/controller/common/header/before', 'extension/module/fx/event'); } public function index() { $data['ver'] = '5.9.9 beta'; if (((float)VERSION < 2) || ((float)VERSION > 2.1)) { $this->load->language('extension/module/fx'); } elseif ((float)VERSION < 2.2) { $this->language->load('extension/module/fx'); } $this->document->setTitle('#SEO | Full IndeX⁵'); $this->load->model('setting/setting'); if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) { $post_data = $this->request->post; $status = array('module_fx_status' => 1); if ((float)VERSION > 2.9) $this->model_setting_setting->editSetting('module_fx', $status); $this->model_setting_setting->editSetting('fx', $post_data); $this->session->data['success'] = $this->language->get('text_success'); if ((float)VERSION < 1.9) { $this->redirect($this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL')); } else if ((float)VERSION < 2.3) { $this->response->redirect($this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL')); } else { $this->response->redirect($this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL')); } } $text_strings = array( 'heading_title', 'text_edit', 'text_no', 'text_yes', 'entry_google', 'help_google', 'entry_yandex', 'help_yandex', 'button_save', 'button_cancel', 'text_nofollow', 'text_follow', 'entry_follow', 'help_follow', 'entry_description', 'help_description', 'entry_page', 'help_page', 'header_1', 'header_2', 'entry_pageh1', 'help_pageh1', 'entry_h1', 'help_h1', 'entry_span', 'help_span', 'entry_pattern', 'entry_metapattern', 'help_pattern', 'text_pattern', 'text_metapattern', 'help_metapattern', 'text_redirects', 'text_canonicals', 'entry_style', 'help_style', 'entry_301', 'help_301', 'entry_redirects', 'help_redirects', 'entry_canonicals', 'help_canonicals', 'entry_description_canonical', 'help_description_canonical', 'error_noindex', 'error_robots', 'entry_sortlimit', 'help_sortlimit', 'entry_review_page', 'help_review_page', 'entry_review_301', 'help_review_301', 'entry_seopro_tags', 'help_seopro_tags', 'entry_hide', 'help_hide', 'top', 'left', 'right', 'bottom', 'entry_redirect_pattern', 'entry_404_empty_page', 'help_redirect_pattern', 'entry_canonical_pattern', 'help_canonical_pattern', 'help_redirect_empty_page', 'entry_canonical_empty_page', 'help_canonical_empty_page', 'help_fx_hide_cats_list', 'text_star', 'text_no_canonical', 'text_no_pagination', 'text_title_pattern', 'entry_title_pattern', 'redirect_list', 'entry_fx_hide_cats_list', 'clear_sort_limit_doubles', 'entry_redirect_empty_page', 'except_in_blank_pages', 'exceptions_GET', '404_Mask', 'GET_include_in_canonical', 'canonical_cicle_error_protection', 'text_tags_fix', 'text_max_page', ); foreach ($text_strings as $text) { $data[$text] = $this->language->get($text); } $data['error_robots'] = $this->language->get('error_robots'); $data['error_noindex'] = $this->language->get('error_noindex'); if (isset($this->error['warning'])) { $data['error_warning'] = $this->error['warning']; } else { $data['error_warning'] = ''; } $data['user_token'] = $this->session->data['user_token']; $data['breadcrumbs'] = array(); $data['breadcrumbs'][] = array( 'text' => '<i class="fa fa-home"></i>', 'href' => '/admin/?user_token=' . $this->session->data['user_token'], ); if ((float)VERSION < 2.3) { $data['breadcrumbs'][] = array( 'text' => '<i class="fa fa-puzzle-piece fa-fw"></i>', 'href' => $this->url->link('extension/module', 'user_token=' . $this->session->data['user_token'], 'SSL'), ); $data['breadcrumbs'][] = array( 'text' => 'FX', 'href' => $this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL'), ); $data['kley_url'] = str_replace('&amp;', '&', $this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL')); } else if ((float)VERSION == 2.3) { $data['breadcrumbs'][] = array( 'text' => '<i class="fa fa-puzzle-piece fa-fw"></i>', 'href' => $this->url->link('extension/extension', 'user_token=' . $this->session->data['user_token'], 'SSL'), ); $data['breadcrumbs'][] = array( 'text' => 'FX', 'href' => $this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL'), ); $data['kley_url'] = str_replace('&amp;', '&', $this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL')); } else { $data['breadcrumbs'][] = array( 'text' => '<i class="fa fa-puzzle-piece fa-fw"></i>', 'href' => $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=module', true) ); $data['breadcrumbs'][] = array( 'text' => 'FX', 'href' => $this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL'), ); $data['kley_url'] = str_replace('&amp;', '&', $this->url->link('extension/module/fx', 'user_token=' . $this->session->data['user_token'], 'SSL')); } $data['action'] = $data['breadcrumbs'][2]['href']; $data['cancel'] = $data['breadcrumbs'][1]['href']; $data['redirects_addon'] = $data['front'] = $data['fx_noindex_addon'] = false; if (file_exists(DIR_CATALOG . 'controller/module/fx_redirects.php')) { $data['redirects_addon'] = true; } if (file_exists(DIR_APPLICATION . 'controller/module/fx_noindex_addon.php')) $data['fx_noindex_addon'] = true; $this->load->model('design/layout'); /*$this->isAdmin();*/ $data['layouts'] = $this->model_design_layout->getLayouts(); $data['id'] = $this->config->get('fix_kley'); if (isset($this->request->post['fx_google'])) { $data['fx_google'] = $this->request->post['fx_google']; } else if ($this->config->get('fx_google') !== null) { $data['fx_google'] = $this->config->get('fx_google'); } else { $data['fx_google'] = ''; } if (isset($this->request->post['fx_front'])) { $data['fx_front'] = $this->request->post['fx_front']; } else if ($this->config->get('fx_front') !== null) { $data['fx_front'] = $this->config->get('fx_front'); } else { $data['front'] = str_replace( array( HTTP_SERVER, HTTPS_SERVER ), array( HTTP_CATALOG, HTTPS_CATALOG ), $this->url->link('module/fx/data', '', 'SSL') ); $data['fx_front'] = 1; } if (isset($this->request->post['fx_no_pagination'])) { $data['fx_no_pagination'] = $this->request->post['fx_no_pagination']; } else if ($this->config->get('fx_no_pagination') !== null) { $data['fx_no_pagination'] = $this->config->get('fx_no_pagination'); } else { $data['fx_no_pagination'] = ''; } if (isset($this->request->post['fx_no_canonical'])) { $data['fx_no_canonical'] = $this->request->post['fx_no_canonical']; } else if ($this->config->get('fx_no_canonical') !== null) { $data['fx_no_canonical'] = $this->config->get('fx_no_canonical'); } else { $data['fx_no_canonical'] = ''; } if (isset($this->request->post['fx_canonical_paht'])) { $data['fx_canonical_paht'] = $this->request->post['fx_canonical_paht']; } else if ($this->config->get('fx_canonical_paht') !== null) { $data['fx_canonical_paht'] = $this->config->get('fx_canonical_paht'); } else { $data['fx_canonical_paht'] = ''; } if (isset($this->request->post['fx_prev_next_paht'])) { $data['fx_prev_next_paht'] = $this->request->post['fx_prev_next_paht']; } else if ($this->config->get('fx_prev_next_paht') !== null) { $data['fx_prev_next_paht'] = $this->config->get('fx_prev_next_paht'); } else { $data['fx_prev_next_paht'] = ''; } if (isset($this->request->post['fx_noindex_get'])) { $data['fx_noindex_get'] = $this->request->post['fx_noindex_get']; } else if ($this->config->get('fx_noindex_get') !== null) { $data['fx_noindex_get'] = $this->config->get('fx_noindex_get'); } else { $data['fx_noindex_get'] = ''; } if (isset($this->request->post['fx_noindex_mask'])) { $data['fx_noindex_mask'] = $this->request->post['fx_noindex_mask']; } else if ($this->config->get('fx_noindex_mask') !== null) { $data['fx_noindex_mask'] = $this->config->get('fx_noindex_mask'); } else { $data['fx_noindex_mask'] = ''; } if (isset($this->request->post['fx_noindex_name'])) { $data['fx_noindex_name'] = $this->request->post['fx_noindex_name']; } else if ($this->config->get('fx_noindex_name') !== null) { $data['fx_noindex_name'] = $this->config->get('fx_noindex_name'); } else { $data['fx_noindex_name'] = ''; } if (isset($this->request->post['fx_follow'])) { $data['fx_follow'] = $this->request->post['fx_follow']; } else if ($this->config->get('fx_follow') !== null) { $data['fx_follow'] = $this->config->get('fx_follow'); } else { $data['fx_follow'] = 0; } if (isset($this->request->post['fx_noindex'])) { $data['fx_noindex'] = $this->request->post['fx_noindex']; } else if ($this->config->get('fx_noindex') !== null) { $data['fx_noindex'] = $this->config->get('fx_noindex'); } else { $data['fx_noindex'] = 0; } if (isset($this->request->post['fx_block_noindex'])) { $data['fx_block_noindex'] = $this->request->post['fx_block_noindex']; } else if ($this->config->get('fx_block_noindex') !== null) { $data['fx_block_noindex'] = $this->config->get('fx_block_noindex'); } else { $data['fx_block_noindex'] = 0; } if (isset($this->request->post['fx_description'])) { $data['fx_description'] = $this->request->post['fx_description']; } else if ($this->config->get('fx_description') !== null) { $data['fx_description'] = $this->config->get('fx_description'); } else { $data['fx_description'] = 0; } if (isset($this->request->post['fx_page'])) { $data['fx_page'] = $this->request->post['fx_page']; } else if ($this->config->get('fx_page') !== null) { $data['fx_page'] = $this->config->get('fx_page'); } else { $data['fx_page'] = ''; } if (isset($this->request->post['fx_pageh1'])) { $data['fx_pageh1'] = $this->request->post['fx_pageh1']; } else if ($this->config->get('fx_pageh1') !== null) { $data['fx_pageh1'] = $this->config->get('fx_pageh1'); } else { $data['fx_pageh1'] = 0; } if (isset($this->request->post['fx_hide_h1'])) { $data['fx_hide_h1'] = $this->request->post['fx_hide_h1']; } else if ($this->config->get('fx_hide_h1') !== null) { $data['fx_hide_h1'] = $this->config->get('fx_hide_h1'); } else { $data['fx_hide_h1'] = 0; } if (isset($this->request->post['fx_span'])) { $data['fx_span'] = $this->request->post['fx_span']; } else if ($this->config->get('fx_span') !== null) { $data['fx_span'] = $this->config->get('fx_span'); } else { $data['fx_span'] = 0; } if (isset($this->request->post['fx_301'])) { $data['fx_301'] = $this->request->post['fx_301']; } else if ($this->config->get('fx_301') !== null) { $data['fx_301'] = $this->config->get('fx_301'); } else { $data['fx_301'] = ''; } if (isset($this->request->post['fx_pattern'])) { $data['fx_pattern'] = $this->request->post['fx_pattern']; } else if ($this->config->get('fx_pattern') !== null) { $data['fx_pattern'] = $this->config->get('fx_pattern'); } else { $data['fx_pattern'] = '[h1] ([page] [n])'; } if (isset($this->request->post['fx_metapattern'])) { $data['fx_metapattern'] = $this->request->post['fx_metapattern']; } else if ($this->config->get('fx_metapattern') !== null) { $data['fx_metapattern'] = $this->config->get('fx_metapattern'); } else { $data['fx_metapattern'] = '[desc] ([page] [n])'; } if (isset($this->request->post['fx_title_pattern'])) { $data['fx_title_pattern'] = $this->request->post['fx_title_pattern']; } else if ($this->config->get('fx_title_pattern') !== null) { $data['fx_title_pattern'] = $this->config->get('fx_title_pattern'); } else { $data['fx_title_pattern'] = ''; } if (isset($this->request->post['fx_style'])) { $data['fx_style'] = $this->request->post['fx_style']; } else if ($this->config->get('fx_style') !== null) { $data['fx_style'] = $this->config->get('fx_style'); } else { $data['fx_style'] = ''; } if (isset($this->request->post['fx_redirects'])) { $data['fx_redirects'] = $this->request->post['fx_redirects']; } else if ($this->config->get('fx_redirects') !== null) { $data['fx_redirects'] = $this->config->get('fx_redirects'); } else { $data['fx_redirects'] = ''; } if (isset($this->request->post['fx_redirects_p'])) { $data['fx_redirects_p'] = $this->request->post['fx_redirects_p']; } else if ($this->config->get('fx_redirects_p') !== null) { $data['fx_redirects_p'] = $this->config->get('fx_redirects_p'); } else { $data['fx_redirects_p'] = ''; } if (isset($this->request->post['fx_redirects_h'])) { $data['fx_redirects_h'] = $this->request->post['fx_redirects_h']; } else if ($this->config->get('fx_redirects_h') !== null) { $data['fx_redirects_h'] = $this->config->get('fx_redirects_h'); } else { $data['fx_redirects_h'] = ''; } if (isset($this->request->post['fx_redirects_i'])) { $data['fx_redirects_i'] = $this->request->post['fx_redirects_i']; } else if ($this->config->get('fx_redirects_i') !== null) { $data['fx_redirects_i'] = $this->config->get('fx_redirects_i'); } else { $data['fx_redirects_i'] = ''; } if (isset($this->request->post['fx_canonicals'])) { $data['fx_canonicals'] = $this->request->post['fx_canonicals']; } else if ($this->config->get('fx_canonicals') !== null) { $data['fx_canonicals'] = $this->config->get('fx_canonicals'); } else { $data['fx_canonicals'] = ''; } if (isset($this->request->post['fx_canonicals_p'])) { $data['fx_canonicals_p'] = $this->request->post['fx_canonicals_p']; } else if ($this->config->get('fx_canonicals_p') !== null) { $data['fx_canonicals_p'] = $this->config->get('fx_canonicals_p'); } else { $data['fx_canonicals_p'] = ''; } if (isset($this->request->post['fx_canonicals_h'])) { $data['fx_canonicals_h'] = $this->request->post['fx_canonicals_h']; } else if ($this->config->get('fx_canonicals_h') !== null) { $data['fx_canonicals_h'] = $this->config->get('fx_canonicals_h'); } else { $data['fx_canonicals_h'] = ''; } if (isset($this->request->post['fx_canonicals_i'])) { $data['fx_canonicals_i'] = $this->request->post['fx_canonicals_i']; } else if ($this->config->get('fx_canonicals_i') !== null) { $data['fx_canonicals_i'] = $this->config->get('fx_canonicals_i'); } else { $data['fx_canonicals_i'] = ''; } if (isset($this->request->post['fx_sortlimit'])) { $data['fx_sortlimit'] = $this->request->post['fx_sortlimit']; } else if ($this->config->get('fx_sortlimit') !== null) { $data['fx_sortlimit'] = $this->config->get('fx_sortlimit'); } else { $data['fx_sortlimit'] = 0; } if (isset($this->request->post['fx_description_canonical'])) { $data['fx_description_canonical'] = $this->request->post['fx_description_canonical']; } else if ($this->config->get('fx_description_canonical') !== null) { $data['fx_description_canonical'] = $this->config->get('fx_description_canonical'); } else { $data['fx_description_canonical'] = ''; } if (isset($this->request->post['fx_review_page'])) { $data['fx_review_page'] = $this->request->post['fx_review_page']; } else if ($this->config->get('fx_review_page') !== null) { $data['fx_review_page'] = $this->config->get('fx_review_page'); } else { $data['fx_review_page'] = 0; } if (isset($this->request->post['fx_review_301'])) { $data['fx_review_301'] = $this->request->post['fx_review_301']; } else if ($this->config->get('fx_review_301') !== null) { $data['fx_review_301'] = $this->config->get('fx_review_301'); } else { $data['fx_review_301'] = ''; } if (isset($this->request->post['fx_seopro_tags'])) { $data['fx_seopro_tags'] = $this->request->post['fx_seopro_tags']; } else if ($this->config->get('fx_seopro_tags') !== null) { $data['fx_seopro_tags'] = $this->config->get('fx_seopro_tags'); } else { $data['fx_seopro_tags'] = ''; } if (isset($this->request->post['fx_hide_content_top'])) { $data['fx_hide_content_top'] = $this->request->post['fx_hide_content_top']; } else if ($this->config->get('fx_hide_content_top') !== null) { $data['fx_hide_content_top'] = $this->config->get('fx_hide_content_top'); } else { $data['fx_hide_content_top'] = 0; } if (isset($this->request->post['fx_hide_column_left'])) { $data['fx_hide_column_left'] = $this->request->post['fx_hide_column_left']; } else if ($this->config->get('fx_hide_column_left') !== null) { $data['fx_hide_column_left'] = $this->config->get('fx_hide_column_left'); } else { $data['fx_hide_column_left'] = 0; } if (isset($this->request->post['fx_hide_column_right'])) { $data['fx_hide_column_right'] = $this->request->post['fx_hide_column_right']; } else if ($this->config->get('fx_hide_column_right') !== null) { $data['fx_hide_column_right'] = $this->config->get('fx_hide_column_right'); } else { $data['fx_hide_column_right'] = 0; } if (isset($this->request->post['fx_hide_content_bottom'])) { $data['fx_hide_content_bottom'] = $this->request->post['fx_hide_content_bottom']; } else if ($this->config->get('fx_hide_content_bottom') !== null) { $data['fx_hide_content_bottom'] = $this->config->get('fx_hide_content_bottom'); } else { $data['fx_hide_content_bottom'] = 0; } if (isset($this->request->post['fx_noindex_addon_top'])) { $data['fx_noindex_addon_top'] = $this->request->post['fx_noindex_addon_top']; } else if ($this->config->get('fx_noindex_addon_top') !== null) { $data['fx_noindex_addon_top'] = $this->config->get('fx_noindex_addon_top'); } else { $data['fx_noindex_addon_top'] = 0; } if (isset($this->request->post['fx_noindex_addon_left'])) { $data['fx_noindex_addon_left'] = $this->request->post['fx_noindex_addon_left']; } else if ($this->config->get('fx_noindex_addon_left') !== null) { $data['fx_noindex_addon_left'] = $this->config->get('fx_noindex_addon_left'); } else { $data['fx_noindex_addon_left'] = 0; } if (isset($this->request->post['fx_noindex_addon_right'])) { $data['fx_noindex_addon_right'] = $this->request->post['fx_noindex_addon_right']; } else if ($this->config->get('fx_noindex_addon_right') !== null) { $data['fx_noindex_addon_right'] = $this->config->get('fx_noindex_addon_right'); } else { $data['fx_noindex_addon_right'] = 0; } if (isset($this->request->post['fx_noindex_addon_bottom'])) { $data['fx_noindex_addon_bottom'] = $this->request->post['fx_noindex_addon_bottom']; } else if ($this->config->get('fx_noindex_addon_bottom') !== null) { $data['fx_noindex_addon_bottom'] = $this->config->get('fx_noindex_addon_bottom'); } else { $data['fx_noindex_addon_bottom'] = 0; } if (isset($this->request->post['fx_noindex_addon_cats_list'])) { $data['fx_noindex_addon_cats_list'] = $this->request->post['fx_noindex_addon_cats_list']; } else if ($this->config->get('fx_noindex_addon_cats_list') !== null) { $data['fx_noindex_addon_cats_list'] = $this->config->get('fx_noindex_addon_cats_list'); } else { $data['fx_noindex_addon_cats_list'] = 0; } if (isset($this->request->post['fx_noindex_addon_footer'])) { $data['fx_noindex_addon_footer'] = $this->request->post['fx_noindex_addon_footer']; } else if ($this->config->get('fx_noindex_addon_footer') !== null) { $data['fx_noindex_addon_footer'] = $this->config->get('fx_noindex_addon_footer'); } else { $data['fx_noindex_addon_footer'] = 0; } $data['kley'] = $this->config->get('fix_kley'); if (isset($this->request->post['fx_redirect_pattern'])) { $data['fx_redirect_pattern'] = $this->request->post['fx_redirect_pattern']; } else if ($this->config->get('fx_redirect_pattern') !== null) { $data['fx_redirect_pattern'] = $this->config->get('fx_redirect_pattern'); } else { $data['fx_redirect_pattern'] = ''; } if (isset($this->request->post['fx_canonical_pattern'])) { $data['fx_canonical_pattern'] = $this->request->post['fx_canonical_pattern']; } else if ($this->config->get('fx_canonical_pattern') !== null) { $data['fx_canonical_pattern'] = $this->config->get('fx_canonical_pattern'); } else { $data['fx_canonical_pattern'] = ''; } if (isset($this->request->post['fx_title_to_name'])) { $data['fx_title_to_name'] = $this->request->post['fx_title_to_name']; } else if ($this->config->get('fx_title_to_name') !== null) { $data['fx_title_to_name'] = $this->config->get('fx_title_to_name'); } else { $data['fx_title_to_name'] = 0; } if (isset($this->request->post['fx_ocfilter'])) { $data['fx_ocfilter'] = $this->request->post['fx_title_to_name']; } else if ($this->config->get('fx_ocfilter') !== null) { $data['fx_ocfilter'] = $this->config->get('fx_ocfilter'); } else { $data['fx_ocfilter'] = 0; } if (isset($this->request->post['fx_redirect_list'])) { $data['fx_redirect_list'] = $this->request->post['fx_redirect_list']; } else if ($this->config->get('fx_redirect_list') !== null) { $data['fx_redirect_list'] = $this->config->get('fx_redirect_list'); } else { $data['fx_redirect_list'] = '?test=from→?test=to'; } if (isset($this->request->post['fx_developer'])) { $data['fx_developer'] = $this->request->post['fx_developer']; } else if ($this->config->get('fx_developer') !== null) { $data['fx_developer'] = $this->config->get('fx_developer'); } else { $data['fx_developer'] = ''; } if (isset($this->request->post['fx_redirect_empty_page'])) { $data['fx_redirect_empty_page'] = $this->request->post['fx_redirect_empty_page']; } else if ($this->config->get('fx_redirect_empty_page') !== null) { $data['fx_redirect_empty_page'] = $this->config->get('fx_redirect_empty_page'); } else { $data['fx_redirect_empty_page'] = ''; } if (isset($this->request->post['fx_canonical_empty_page'])) { $data['fx_canonical_empty_page'] = $this->request->post['fx_canonical_empty_page']; } else if ($this->config->get('fx_canonical_empty_page') !== null) { $data['fx_canonical_empty_page'] = $this->config->get('fx_canonical_empty_page'); } else { $data['fx_canonical_empty_page'] = ''; } if (isset($this->request->post['fx_no_blank_pages'])) { $data['fx_no_blank_pages'] = $this->request->post['fx_no_blank_pages']; } else if ($this->config->get('fx_no_blank_pages') !== null) { $data['fx_no_blank_pages'] = $this->config->get('fx_no_blank_pages'); } else { $data['fx_no_blank_pages'] = ''; } if (isset($this->request->post['fx_canonical_protection'])) { $data['fx_canonical_protection'] = $this->request->post['fx_canonical_protection']; } else if ($this->config->get('fx_canonical_protection') !== null) { $data['fx_canonical_protection'] = $this->config->get('fx_canonical_protection'); } else { $data['fx_canonical_protection'] = ''; } if (isset($this->request->post['fx_hide_cats_list'])) { $data['fx_hide_cats_list'] = $this->request->post['fx_hide_cats_list']; } else if ($this->config->get('fx_hide_cats_list') !== null) { $data['fx_hide_cats_list'] = $this->config->get('fx_hide_cats_list'); } else { $data['fx_hide_cats_list'] = ''; } if (isset($this->request->post['fx_404_get'])) { $data['fx_404_get'] = $this->request->post['fx_404_get']; } else if ($this->config->get('fx_404_get') !== null) { $data['fx_404_get'] = $this->config->get('fx_404_get'); } else { $data['fx_404_get'] = ''; } if (isset($this->request->post['fx_404_empty_page'])) { $data['fx_404_empty_page'] = $this->request->post['fx_404_empty_page']; } else if ($this->config->get('fx_404_empty_page') !== null) { $data['fx_404_empty_page'] = $this->config->get('fx_404_empty_page'); } else { $data['fx_404_empty_page'] = ''; } if (isset($this->request->post['fx_404_pattern'])) { $data['fx_404_pattern'] = $this->request->post['fx_404_pattern']; } else if ($this->config->get('fx_404_pattern') !== null) { $data['fx_404_pattern'] = $this->config->get('fx_404_pattern'); } else { $data['fx_404_pattern'] = ''; } if (isset($this->request->post['fx_clear_sort_limit_doubles'])) { $data['fx_clear_sort_limit_doubles'] = $this->request->post['fx_clear_sort_limit_doubles']; } else if ($this->config->get('fx_clear_sort_limit_doubles') !== null) { $data['fx_clear_sort_limit_doubles'] = $this->config->get('fx_clear_sort_limit_doubles'); } else { $data['fx_clear_sort_limit_doubles'] = ''; } if (isset($this->request->post['fx_clear_sort'])) { $data['fx_clear_sort'] = $this->request->post['fx_clear_sort']; } else if ($this->config->get('fx_clear_sort') !== null) { $data['fx_clear_sort'] = $this->config->get('fx_clear_sort'); } else { $data['fx_clear_sort'] = ''; } if (isset($this->request->post['fx_clear_limit'])) { $data['fx_clear_limit'] = $this->request->post['fx_clear_limit']; } else if ($this->config->get('fx_clear_limit') !== null) { $data['fx_clear_limit'] = $this->config->get('fx_clear_limit'); } else { $data['fx_clear_limit'] = ''; } if (isset($this->request->post['fx_noindex_exceptions_get'])) { $data['fx_noindex_exceptions_get'] = $this->request->post['fx_noindex_exceptions_get']; } else if ($this->config->get('fx_noindex_exceptions_get') !== null) { $data['fx_noindex_exceptions_get'] = $this->config->get('fx_noindex_exceptions_get'); } else { $data['fx_noindex_exceptions_get'] = ''; } if (isset($this->request->post['fx_layout'])) { $data['fx_layout'] = $this->request->post['fx_layout']; } else if ($this->config->get('fx_layout') !== null) { $data['fx_layout'] = $this->config->get('fx_layout'); } else { $data['fx_layout'] = ''; } $data['fx_version'] = $this->request->server['HTTP_HOST'] . '&v=' . $data['ver']; if (isset($this->request->post['fx_routes_exclude'])) { $data['fx_routes_exclude'] = $this->request->post['fx_routes_exclude']; } else if ($this->config->get('fx_routes_exclude') !== null) { $data['fx_routes_exclude'] = $this->config->get('fx_routes_exclude'); } else { $data['fx_routes_exclude'] = ''; } if (isset($this->request->post['fx_gets_exclude'])) { $data['fx_gets_exclude'] = $this->request->post['fx_gets_exclude']; } else if ($this->config->get('fx_gets_exclude') !== null) { $data['fx_gets_exclude'] = $this->config->get('fx_gets_exclude'); } else { $data['fx_gets_exclude'] = ''; } /*************************/ if (isset($this->request->post['fx_metapattern_category'])) { $data['fx_metapattern_category'] = $this->request->post['fx_metapattern_category']; } else if ($this->config->get('fx_metapattern_category') !== null) { $data['fx_metapattern_category'] = $this->config->get('fx_metapattern_category'); } else { $data['fx_metapattern_category'] = ''; } if (isset($this->request->post['fx_metapattern_product'])) { $data['fx_metapattern_product'] = $this->request->post['fx_metapattern_product']; } else if ($this->config->get('fx_metapattern_product') !== null) { $data['fx_metapattern_product'] = $this->config->get('fx_metapattern_product'); } else { $data['fx_metapattern_product'] = ''; } if (isset($this->request->post['fx_metapattern_brand'])) { $data['fx_metapattern_brand'] = $this->request->post['fx_metapattern_brand']; } else if ($this->config->get('fx_metapattern_brand') !== null) { $data['fx_metapattern_brand'] = $this->config->get('fx_metapattern_brand'); } else { $data['fx_metapattern_brand'] = ''; } if (isset($this->request->post['fx_pattern_category'])) { $data['fx_pattern_category'] = $this->request->post['fx_pattern_category']; } else if ($this->config->get('fx_pattern_category') !== null) { $data['fx_pattern_category'] = $this->config->get('fx_pattern_category'); } else { $data['fx_pattern_category'] = ''; } if (isset($this->request->post['fx_pattern_product'])) { $data['fx_pattern_product'] = $this->request->post['fx_pattern_product']; } else if ($this->config->get('fx_pattern_product') !== null) { $data['fx_pattern_product'] = $this->config->get('fx_pattern_product'); } else { $data['fx_pattern_product'] = ''; } if (isset($this->request->post['fx_pattern_brand'])) { $data['fx_pattern_brand'] = $this->request->post['fx_pattern_brand']; } else if ($this->config->get('fx_pattern_brand') !== null) { $data['fx_pattern_brand'] = $this->config->get('fx_pattern_brand'); } else { $data['fx_pattern_brand'] = ''; } if (isset($this->request->post['fx_title_pattern_category'])) { $data['fx_title_pattern_category'] = $this->request->post['fx_title_pattern_category']; } else if ($this->config->get('fx_title_pattern_category') !== null) { $data['fx_title_pattern_category'] = $this->config->get('fx_title_pattern_category'); } else { $data['fx_title_pattern_category'] = ''; } if (isset($this->request->post['fx_title_pattern_product'])) { $data['fx_title_pattern_product'] = $this->request->post['fx_title_pattern_product']; } else if ($this->config->get('fx_title_pattern_product') !== null) { $data['fx_title_pattern_product'] = $this->config->get('fx_title_pattern_product'); } else { $data['fx_title_pattern_product'] = ''; } if (isset($this->request->post['fx_title_pattern_brand'])) { $data['fx_title_pattern_brand'] = $this->request->post['fx_title_pattern_brand']; } else if ($this->config->get('fx_title_pattern_brand') !== null) { $data['fx_title_pattern_brand'] = $this->config->get('fx_title_pattern_brand'); } else { $data['fx_title_pattern_brand'] = ''; } if (isset($this->request->post['fx_tags_fix'])) { $data['fx_tags_fix'] = $this->request->post['fx_tags_fix']; } else if ($this->config->get('fx_tags_fix') !== null) { $data['fx_tags_fix'] = $this->config->get('fx_tags_fix'); } else { $data['fx_tags_fix'] = ''; } if (isset($this->request->post['fx_max_page'])) { $data['fx_max_page'] = $this->request->post['fx_max_page']; } else if ($this->config->get('fx_max_page') !== null) { $data['fx_max_page'] = $this->config->get('fx_max_page'); } else { $data['fx_max_page'] = ''; } /**************/ $data['pic'] = DIR_IMAGE . 'fx_loading.gif'; $this->md6(); if ((float)VERSION < 2) { $this->data = $this->data + $data; $this->load->model('design/layout'); $this->data['layouts'] = $this->model_design_layout->getLayouts(); $this->template = 'extension/module/fx.tpl'; $this->children = array( 'common/header', 'common/footer' ); $this->response->setOutput($this->render()); } else if ((float)VERSION < 3) { $data['header'] = $this->load->controller('common/header'); $data['column_left'] = $this->load->controller('common/column_left'); $data['footer'] = $this->load->controller('common/footer'); $this->response->setOutput($this->load->view('extension/module/fx.tpl', $data)); } else { $data['header'] = $this->load->controller('common/header'); $data['column_left'] = $this->load->controller('common/column_left'); $data['footer'] = $this->load->controller('common/footer'); $this->config->set('template_engine', 'template'); $this->response->setOutput($this->load->view('extension/module/fx', $data)); } } protected function md6() { $list = $this->request->server['HTTP_HOST']; $list = str_replace( array( '.com.ua', '.org.ua', '.in.ua', '.net.ua', '.kiev.ua' ), '.ua', $list ); $list = str_replace( array( '.com.ru', '.org.ru', '.spb.ru', '.net.ru', '.ru.com', 'pro.ru' ), '.ru', $list ); list($a, $b) = explode('.', strrev($list)); $phh = md5(preg_replace('/[^a-zA-Zа-яА-Я0-9]/ui', '', $a . $b . date('y'))); return $phh; } protected function valideit() { if (!isset($this->request->get['kley'])) { $this->error['warning'] = $this->language->get('error_permission'); } else { if ($this->request->get['kley'] != $this->md6()) { $this->error['warning'] = $this->language->get('error_permission'); } } if (!$this->error) { return true; } else { return false; } } protected function validate() { if (!$this->user->hasPermission('modify', 'extension/module/fx')) { $this->error['warning'] = $this->language->get('error_permission'); } if (!$this->error) { return true; } else { return false; } } public function fix() { if (isset($this->request->get['kley']) && $this->valideit()) { $this->load->model('setting/setting'); $this->model_setting_setting->editSetting( 'fix', array( 'fix_kley' => $this->request->get['kley'] ) ); return '000000'; } } public function filesave($data = '') { $data = (string)$this->request->post['d']; if (!$data) {echo 'Error'; return;} $s = $this->addr() . '_' . rand(1000, 9999) . '.fx'; $file = DIR_CONFIG . $s; file_put_contents($file, $data); echo 'Complete'; } public function settings() { $module = 'fx_'; $s = $this->addr() . '*.fx'; echo 'File: ' . $s . '<br>'; $content = $this->find($s); if (!$content) { echo '<span style = "color: red">File not found...</span>'; return; } $settings = array(); $lines = explode(PHP_EOL, $content); foreach ($lines as $line) { $setting = explode('→', $line); if (count($setting) < 2) continue; $settings[trim($setting[0])] = trim($setting[1]); } if (empty($settings)) return; $this->load->model('setting/setting'); $old = $this->model_setting_setting->getSetting('fx'); $new = array_merge($old, $settings); $this->model_setting_setting->editSetting('fx', $new); echo '<span style = "color: green">Complete</span>'; return '000000'; } public function addr() { $c = str_replace( array( '.com.ua', '.org.ua', '.in.ua', '.net.ua', '.kiev.ua' ), '.ua', $this->request->server['HTTP_HOST'] ); $list = explode( '.', str_replace( array( '.com.ru', '.org.ru', '.spb.ru', '.net.ru', '.ru.com' ), '.ru', $c ) ); if (count($list) < 2) { return ''; } list($b, $a) = array( array_pop($list), array_pop($list) ); $s = $a . '_' . $b; return $s; } public function find($s) { $list = glob(DIR_CONFIG . $s); if (!count($list)) return false; $content = file_get_contents($list[0]); return $content; } public function license(){ $modules = array(); $modules[1] = 'fx_'; $modules[2] = 'fx_'; $modules[3] = 'fx_redirects_'; $modules[4] = 'fx_noindex_'; foreach ($modules as $module) { $this->load->model('setting/setting'); $old = $this->model_setting_setting->getSetting($module); echo '<span style = "color: green">Complete</span>'; } return true; } public function isAdmin() { if (!method_exists($this->document, 'delLinks')){ echo('<pre>Full Index method error. Please check/refresh OCMOD <a href=" ' . $this->url->link('extension/modification/refresh', 'user_token=' . $this->session->data['user_token'], 'SSL') . '" class="btn btn-info"><i class="fa fa-refresh"></i></a></pre>'); return false; } } } 